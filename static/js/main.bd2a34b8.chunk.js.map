{"version":3,"sources":["components/formFields/input.js","components/formFields/citizenId.js","components/formFields/select.js","components/formFields/datePicker.js","components/formFields/radio.js","components/constants.js","components/userForm.js","components/userTable.js","components/duck/user.js","App.js","serviceWorker.js","createStore.js","index.js"],"names":["FormItem","Form","Item","InputField","form","name","decorator","controlProps","formItemProps","getFieldDecorator","CitizenIdInput","value","onChange","triggerChange","changedData","newValue","maxLength","style","width","e","first","target","undefined","second","third","fourth","fifth","CitizenIdField","Option","Select","SelectField","options","renderOptions","map","option","index","key","title","StyledDatePicker","styled","DatePicker","disabledDate","current","moment","endOf","DatePickerField","format","Group","Radio","RadioField","NameTitleOptions","GenderOptions","PhoneCodeOptions","NationalityOptions","Wrapper","div","FlexRow","StyledSpan","span","required","message","UserForm","handleSubmit","props","validateFields","err","data","onSubmit","resetFields","validateCitizenId","rule","citizenId","callback","values","Object","count","forEach","parseInt","toString","length","this","user","layout","label","initialValue","rules","lastName","allowClear","birthday","nationality","placeholder","citizenID","validator","gender","phoneCode","phone","pattern","passport","type","salary","onClick","Component","create","ButtonStyled","Button","StyledSelectBox","itemPaginationRender","originalElement","UserTable","state","isSelectAll","selectedRowKeys","onSelectChange","setState","onSelectAll","users","checked","id","deleteButton","onConfirm","deleteUsers","updateEditId","rowSelection","columnTitle","columns","dataIndex","render","record","dataSource","rowKey","pagination","position","itemRender","initState","App","editId","formData","updateUser","createUser","Date","valueOf","getInitialValue","find","className","connect","payload","ids","Boolean","window","location","hostname","match","persistConfig","storage","persistedReducer","persistReducer","action","concat","updateUsers","newUsers","filter","includes","store","createStore","persistor","persistStore","configureStore","ReactDOM","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd2a34b8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Input } from \"antd\";\n\nconst FormItem = Form.Item;\n\nconst InputField = ({\n  form,\n  name,\n  decorator = {},\n  controlProps = {},\n  formItemProps = {}\n}) => {\n  const { getFieldDecorator } = form;\n\n  return (\n    <FormItem {...formItemProps}>\n      {getFieldDecorator(name, decorator)(<Input {...controlProps} />)}\n    </FormItem>\n  );\n};\n\nexport default InputField;\n","import React from \"react\";\nimport { Form, Input } from \"antd\";\n\nconst FormItem = Form.Item;\n\nconst CitizenIdInput = ({ value = {}, onChange }) => {\n  const triggerChange = changedData => {\n    const newValue = { ...value, ...changedData };\n    onChange(newValue);\n  };\n\n  return (\n    <>\n      <Input\n        maxLength={1}\n        style={{ width: \"10%\" }}\n        onChange={e => triggerChange({ first: e.target.value })}\n        value={value.first || undefined}\n      />\n      <span> - </span>\n      <Input\n        maxLength={4}\n        style={{ width: \"10%\" }}\n        onChange={e => triggerChange({ second: e.target.value })}\n        value={value.second || undefined}\n      />\n      <span> - </span>\n\n      <Input\n        maxLength={5}\n        style={{ width: \"10%\" }}\n        onChange={e => triggerChange({ third: e.target.value })}\n        value={value.third || undefined}\n      />\n      <span> - </span>\n\n      <Input\n        maxLength={2}\n        style={{ width: \"10%\" }}\n        onChange={e => triggerChange({ fourth: e.target.value })}\n        value={value.fourth || undefined}\n      />\n      <span> - </span>\n\n      <Input\n        maxLength={1}\n        style={{ width: \"10%\" }}\n        onChange={e => triggerChange({ fifth: e.target.value })}\n        value={value.fifth || undefined}\n      />\n    </>\n  );\n};\n\nconst CitizenIdField = ({ form, name, decorator = {}, formItemProps = {} }) => {\n  const { getFieldDecorator } = form;\n\n  return (\n    <FormItem {...formItemProps}>\n      {getFieldDecorator(name, decorator)(<CitizenIdInput />)}\n    </FormItem>\n  );\n};\n\nexport default CitizenIdField;\n","import React from \"react\";\nimport { Form, Select } from \"antd\";\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\n\nconst SelectField = ({\n  form,\n  name,\n  decorator = {},\n  controlProps = {},\n  formItemProps = {},\n  options = []\n}) => {\n  const { getFieldDecorator } = form;\n\n  const renderOptions = options.map((option, index) => {\n    return (\n      <Option key={index} value={option.value}>\n        {option.title}\n      </Option>\n    );\n  });\n\n  return (\n    <FormItem {...formItemProps}>\n      {getFieldDecorator(name, decorator)(\n        <Select {...controlProps}>{renderOptions}</Select>\n      )}\n    </FormItem>\n  );\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Form, DatePicker } from \"antd\";\nimport styled from \"styled-components\";\n\nconst FormItem = Form.Item;\n\nconst StyledDatePicker = styled(DatePicker)`\n  width: 100%;\n`;\n\nfunction disabledDate(current) {\n  return current && current > moment().endOf(\"day\");\n}\n\nconst DatePickerField = ({\n  form,\n  name,\n  decorator = {},\n  controlProps = {},\n  formItemProps = {},\n  format = \"MM/DD/YYYY\"\n}) => {\n  const { getFieldDecorator } = form;\n\n  return (\n    <FormItem {...formItemProps}>\n      {getFieldDecorator(name, decorator)(\n        <StyledDatePicker\n          {...controlProps}\n          format={format}\n          disabledDate={disabledDate}\n        />\n      )}\n    </FormItem>\n  );\n};\n\nexport default DatePickerField;\n","import React from \"react\";\nimport { Form, Radio } from \"antd\";\n\nconst FormItem = Form.Item;\nconst { Group } = Radio;\n\nconst RadioField = ({\n  form,\n  name,\n  decorator = {},\n  controlProps = {},\n  formItemProps = {},\n  options = []\n}) => {\n  const { getFieldDecorator } = form;\n\n  const renderOptions = options.map((option, index) => {\n    return (\n      <Radio key={index} value={option.value}>\n        {option.title}\n      </Radio>\n    );\n  });\n\n  return (\n    <FormItem {...formItemProps}>\n      {getFieldDecorator(name, decorator)(\n        <Group {...controlProps}>{renderOptions}</Group>\n      )}\n    </FormItem>\n  );\n};\n\nexport default RadioField;\n","export const NameTitleOptions = [\n  {\n    title: \"Mr\",\n    value: \"mr\"\n  },\n  {\n    title: \"Mrs\",\n    value: \"mrs\"\n  },\n  {\n    title: \"Miss\",\n    value: \"miss\"\n  }\n];\n\nexport const GenderOptions = [\n  {\n    title: \"Male\",\n    value: \"Male\"\n  },\n  {\n    title: \"Female\",\n    value: \"Female\"\n  },\n  {\n    title: \"Unisex\",\n    value: \"Unisex\"\n  }\n];\n\nexport const PhoneCodeOptions = [\n  {\n    title: \"🇹🇭+66\",\n    value: \"+66\"\n  },\n  {\n    title: \"🇸🇬+65\",\n    value: \"+65\"\n  }\n];\n\nexport const NationalityOptions = [\n  {\n    title: \"American\",\n    value: \"American\"\n  },\n  {\n    title: \"Chinese\",\n    value: \"Chinese\"\n  },\n  {\n    title: \"Malaysian\",\n    value: \"Malaysian\"\n  },\n  {\n    title: \"Singaporean\",\n    value: \"Singaporean\"\n  },\n  {\n    title: \"Thai\",\n    value: \"Thai\"\n  }\n];\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Button } from \"antd\";\nimport moment from \"moment\";\n\nimport InputField from \"./formFields/input\";\nimport CitizenIdField from \"./formFields/citizenId\";\nimport SelectField from \"./formFields/select\";\nimport DatePickerField from \"./formFields/datePicker\";\nimport RadioField from \"./formFields/radio\";\nimport {\n  NameTitleOptions,\n  GenderOptions,\n  PhoneCodeOptions,\n  NationalityOptions\n} from \"./constants\";\n\nconst Wrapper = styled.div`\n  padding: 25px;\n  border: 1px solid #cccccc;\n  border-radius: 5px;\n  margin-bottom: 25px;\n`;\n\nconst FlexRow = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledSpan = styled.span`\n  margin-right: 16px;\n`;\n\nconst required = name => {\n  return { required: true, message: `Please input your ${name}!` };\n};\n\nclass UserForm extends Component {\n  handleSubmit = () => {\n    this.props.form.validateFields((err, data) => {\n      if (err) {\n        return;\n      }\n\n      this.props.onSubmit(data);\n      this.props.form.resetFields();\n    });\n  };\n\n  validateCitizenId = (rule, citizenId, callback) => {\n    if (citizenId) {\n      const values = Object.values(citizenId);\n\n      let count = 0;\n      values.forEach(value => {\n        count += parseInt(value).toString().length;\n      });\n\n      if (count !== 13) {\n        return callback(\"Invalid Citizen ID\");\n      }\n    }\n\n    callback();\n  };\n\n  render() {\n    const { form, user = {} } = this.props;\n\n    return (\n      <Wrapper>\n        <Form layout=\"inline\">\n          <div>\n            <SelectField\n              form={form}\n              name=\"title\"\n              options={NameTitleOptions}\n              formItemProps={{ label: \"Title\" }}\n              decorator={{\n                initialValue: user.title || \"mr\",\n                rules: [required()]\n              }}\n            />\n            <InputField\n              name=\"name\"\n              form={form}\n              formItemProps={{ label: \"First Name\" }}\n              decorator={{\n                initialValue: user.name,\n                rules: [required(\"First Name\")]\n              }}\n            />\n            <InputField\n              name=\"lastName\"\n              form={form}\n              formItemProps={{ label: \"Last Name\" }}\n              decorator={{\n                initialValue: user.lastName,\n                rules: [required(\"Last Name\")]\n              }}\n            />\n          </div>\n          <div>\n            <DatePickerField\n              form={form}\n              name=\"birthday\"\n              formItemProps={{ label: \"Birthday\" }}\n              controlProps={{ allowClear: false }}\n              decorator={{\n                initialValue: user.birthday ? moment(user.birthday) : null,\n                rules: [required(\"Birthday\")]\n              }}\n            />\n            <SelectField\n              form={form}\n              name=\"nationality\"\n              options={NationalityOptions}\n              formItemProps={{ label: \"Nationality\" }}\n              decorator={{\n                initialValue: user.nationality\n              }}\n              controlProps={{\n                placeholder: \"---Please Select---\",\n                style: { width: \"240px\" }\n              }}\n            />\n          </div>\n          <FlexRow>\n            <CitizenIdField\n              name=\"citizenID\"\n              form={form}\n              formItemProps={{ label: \"CitizenID\" }}\n              decorator={{\n                initialValue: user.citizenID,\n                rules: [\n                  {\n                    validator: this.validateCitizenId\n                  }\n                ]\n              }}\n            />\n          </FlexRow>\n          <FlexRow>\n            <RadioField\n              name=\"gender\"\n              form={form}\n              formItemProps={{ label: \"Gender\" }}\n              options={GenderOptions}\n              decorator={{\n                initialValue: user.gender || \"Male\"\n              }}\n            />\n          </FlexRow>\n          <FlexRow>\n            <SelectField\n              form={form}\n              name=\"phoneCode\"\n              options={PhoneCodeOptions}\n              formItemProps={{ label: \"Mobile Phone\" }}\n              decorator={{\n                initialValue: user.phoneCode || \"+66\",\n                rules: [required(\"Mobile Phone\")]\n              }}\n            />\n            <StyledSpan> - </StyledSpan>\n            <InputField\n              name=\"phone\"\n              form={form}\n              decorator={{\n                initialValue: user.phone,\n                rules: [\n                  required(\"Mobile Phone\"),\n                  {\n                    pattern: /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]{8,9}$/,\n                    message: \"Field must be valid phone number.\"\n                  }\n                ]\n              }}\n            />\n          </FlexRow>\n          <FlexRow>\n            <InputField\n              name=\"passport\"\n              form={form}\n              formItemProps={{ label: \"Passport No\" }}\n              decorator={{\n                initialValue: user.passport\n              }}\n            />\n          </FlexRow>\n          <FlexRow>\n            <InputField\n              name=\"salary\"\n              form={form}\n              formItemProps={{ label: \"Expected Salary\" }}\n              controlProps={{\n                type: \"number\"\n              }}\n              decorator={{\n                initialValue: user.salary,\n                rules: [required(\"Expected Salary\")]\n              }}\n            />\n            <span>THB</span>\n          </FlexRow>\n        </Form>\n        <Button type=\"primary\" onClick={this.handleSubmit}>\n          SUBMIT\n        </Button>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Form.create()(UserForm);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Table, Button, Popconfirm, Checkbox } from \"antd\";\n\nconst ButtonStyled = styled(Button)`\n  margin-right: 5px;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst StyledSelectBox = styled.div`\n  position: absolute;\n  top: 16px;\n  z-index: 2;\n`;\n\nconst itemPaginationRender = (current, type, originalElement) => {\n  if (type === \"prev\") {\n    return <a>PREV</a>;\n  }\n  if (type === \"next\") {\n    return <a>NEXT</a>;\n  }\n  return originalElement;\n};\n\nclass UserTable extends Component {\n  state = {\n    isSelectAll: false,\n    selectedRowKeys: []\n  };\n\n  onSelectChange = selectedRowKeys => {\n    this.setState({ selectedRowKeys });\n  };\n\n  onSelectAll = e => {\n    const { users } = this.props;\n    let selectedRowKeys = [];\n    if (e.target.checked) {\n      selectedRowKeys = users.map(user => user.id);\n    }\n\n    this.setState({\n      selectedRowKeys,\n      isSelectAll: e.target.checked\n    });\n  };\n\n  deleteButton = id => (\n    <Popconfirm\n      title=\"Sure to delete?\"\n      onConfirm={() => this.props.deleteUsers(id)}\n    >\n      <Button type=\"danger\">Delete</Button>\n    </Popconfirm>\n  );\n\n  render() {\n    const { updateEditId, users } = this.props;\n    const { selectedRowKeys } = this.state;\n\n    const rowSelection = {\n      columnTitle: \" \",\n      selectedRowKeys,\n      onChange: this.onSelectChange\n    };\n\n    const columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        render: (name, record) => `${name} ${record.lastName}`\n      },\n      {\n        title: \"Gender\",\n        dataIndex: \"gender\"\n      },\n      {\n        title: \"Mobile phone\",\n        dataIndex: \"phone\",\n        render: (phone, record) => `${record.phoneCode}${phone}`\n      },\n      {\n        title: \"Nationality\",\n        dataIndex: \"nationality\",\n        render: nationality => nationality || \"-\"\n      },\n      {\n        title: \"\",\n        dataIndex: \"id\",\n        render: id => (\n          <>\n            <ButtonStyled type=\"primary\" onClick={() => updateEditId(id)}>\n              Edit\n            </ButtonStyled>\n            {this.deleteButton([id])}\n          </>\n        )\n      }\n    ];\n\n    return (\n      <Wrapper>\n        <StyledSelectBox>\n          <Checkbox onChange={this.onSelectAll}>Select all</Checkbox>{\" \"}\n          {this.deleteButton(selectedRowKeys)}\n        </StyledSelectBox>\n        <Table\n          rowSelection={rowSelection}\n          dataSource={users}\n          columns={columns}\n          rowKey=\"id\"\n          pagination={{ position: \"top\", itemRender: itemPaginationRender }}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default UserTable;\n","const initState = {\n  users: []\n};\n\nexport const createUser = ({ data }) => {\n  return {\n    type: \"CREATE_USER\",\n    payload: { data }\n  };\n};\n\nexport const updateUser = ({ data }) => {\n  return {\n    type: \"UPDATE_USER\",\n    payload: { data }\n  };\n};\n\nexport const deleteUsers = ids => {\n  return {\n    type: \"DELATE_USERS\",\n    payload: { ids }\n  };\n};\n\nexport default function reducer(state = initState, action = {}) {\n  switch (action.type) {\n    case \"CREATE_USER\":\n      return { ...state, users: state.users.concat([action.payload.data]) };\n\n    case \"UPDATE_USER\":\n      const { data } = action.payload;\n\n      const updateUsers = state.users.map(user =>\n        user.id === data.id ? data : user\n      );\n\n      return { ...state, users: updateUsers };\n\n    case \"DELATE_USERS\":\n      const { ids } = action.payload;\n      const newUsers = state.users.filter(user => !ids.includes(user.id));\n\n      return { ...state, users: newUsers };\n\n    default:\n      return state;\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport UserForm from \"./components/userForm\";\nimport UserTable from \"./components/userTable\";\nimport { createUser, updateUser, deleteUsers } from \"./components/duck/user\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    editId: null\n  };\n\n  updateEditId = (editId = null) => {\n    this.setState({ editId });\n  };\n\n  handleSubmit = formData => {\n    const { editId } = this.state;\n    if (editId) {\n      return (\n        this.props.updateUser({\n          data: { ...formData, id: editId }\n        }),\n        this.updateEditId()\n      );\n    }\n\n    return this.props.createUser({\n      data: { ...formData, id: new Date().valueOf() }\n    });\n  };\n\n  getInitialValue = () => {\n    const { users } = this.props;\n    const { editId } = this.state;\n\n    if (!editId) return {};\n\n    return users.find(user => user.id === editId);\n  };\n\n  render() {\n    const { users, deleteUsers } = this.props;\n\n    return (\n      <div className=\"app\">\n        <UserForm onSubmit={this.handleSubmit} user={this.getInitialValue()} />\n        {users.length > 0 && (\n          <UserTable\n            users={users}\n            updateEditId={this.updateEditId}\n            deleteUsers={deleteUsers}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ users }) => {\n  return {\n    users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { createUser, updateUser, deleteUsers }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducers from \"./components/duck/user\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport default () => {\n  let store = createStore(persistedReducer);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./createStore\";\n\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}